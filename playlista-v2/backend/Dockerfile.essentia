# Multi-stage build for Playlista v2 with Essentia + TensorFlow support
FROM ubuntu:22.04 AS essentia-builder

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV TF_ENABLE_ONEDNN_OPTS=0

# Install system dependencies for building Essentia
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    cmake \
    pkg-config \
    python3 \
    python3-dev \
    python3-pip \
    libeigen3-dev \
    libfftw3-dev \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libswresample-dev \
    libtag1-dev \
    libyaml-dev \
    libchromaprint-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies for Essentia build
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install numpy tensorflow==2.15.0

# Clone and build Essentia from source with TensorFlow support
WORKDIR /essentia
RUN git clone https://github.com/MTG/essentia.git . && \
    git checkout v2.1_beta5

# Configure Essentia build with TensorFlow support
RUN python3 waf configure --mode=release --build-static --with-python --with-tensorflow && \
    python3 waf && \
    python3 waf install

# Test Essentia installation
RUN python3 -c "import essentia.standard as es; print('Essentia standard imported successfully')" && \
    python3 -c "from essentia.standard import TensorflowPredictMusiCNN; print('TensorFlow support working')"

# Final stage with application
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    TF_ENABLE_ONEDNN_OPTS=0

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libfftw3-3 \
    libavcodec58 \
    libavformat58 \
    libavutil56 \
    libswresample3 \
    libtag1v5 \
    libyaml-0-2 \
    libchromaprint1 \
    curl \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Copy Essentia from builder stage
COPY --from=essentia-builder /usr/local/lib/python3.*/site-packages/essentia /usr/local/lib/python3.11/site-packages/essentia
COPY --from=essentia-builder /usr/local/lib/libessentia.* /usr/local/lib/
COPY --from=essentia-builder /usr/local/include/essentia /usr/local/include/essentia

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY app/ ./app/

# Create non-root user
RUN useradd --create-home --shell /bin/bash playlista && \
    chown -R playlista:playlista /app

USER playlista

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Default command
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

