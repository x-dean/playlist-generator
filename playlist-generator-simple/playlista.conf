# =============================================================================
# PLAYLIST GENERATOR - USER CONFIGURATION
# =============================================================================
# Only user-configurable settings here. Docker paths are handled automatically.

# =============================================================================
# ANALYSIS BEHAVIOR  
# =============================================================================

# Analysis timeout in seconds (10 minutes default)
ANALYSIS_TIMEOUT=600

# Duration threshold - files above 30 minutes get content classification  
LONG_CONTENT_THRESHOLD_MINUTES=30

# =============================================================================
# SMART WORKER ALLOCATION
# =============================================================================

# Worker allocation: 'auto' = dynamic based on workload, or specific number (1-8)
ANALYSIS_WORKERS=auto

# Base memory per worker (same for all files since chunk sizes are consistent)
BASE_MEMORY_PER_WORKER_GB=1.2

# RAM override for containers/LXC (leave empty for auto-detection)
USER_OVERRIDE_TOTAL_RAM_GB=8

# Workload detection: 'auto' = adjust based on file sizes, 'fixed' = use base only
WORKLOAD_DETECTION_MODE=auto

# =============================================================================
# AUDIO PROCESSING
# =============================================================================

# Sample rate for analysis (22050 Hz = good balance of speed/quality)  
OPTIMIZED_SAMPLE_RATE=22050

# Segment analysis for large files
SEGMENT_LENGTH=30                       # Seconds per segment
MAX_SEGMENTS=4                          # Maximum segments to analyze

# Analysis quality: 'low', 'balanced', 'high_accuracy'
PIPELINE_RESOURCE_MODE=balanced

# =============================================================================
# LOGGING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=DEBUG

# Log file rotation
LOG_FILE_SIZE_MB=50                     # Max size before rotation
LOG_MAX_FILES=5                         # Number of rotated logs to keep

# =============================================================================
# DATABASE CONNECTIONS (OPTIONAL - Usually handled by Docker)
# =============================================================================

# PostgreSQL connection details (for pgAdmin and local development)
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=playlista
POSTGRES_USER=playlista
POSTGRES_PASSWORD=playlista_password

# Connection pooling (only if not using Docker environment variables)
POSTGRES_MIN_CONNECTIONS=2
POSTGRES_MAX_CONNECTIONS=10

# =============================================================================
# EXTERNAL APIs (OPTIONAL)
# =============================================================================

# MusicBrainz metadata enrichment
MUSICBRAINZ_ENABLED=true

# Last.fm API integration  
LASTFM_ENABLED=true
LASTFM_API_KEY=2b07c1e8a2d308a749760ab8d579baa8                         # Add your API key if using Last.fm

# =============================================================================
# MUSICNN MODEL CONFIGURATION
# =============================================================================

# MusiCNN model paths (adjust to your model locations)
MUSICNN_MODEL_PATH=/app/models/musicnn/msd-musicnn-1.pb
MUSICNN_JSON_PATH=/app/models/musicnn/msd-musicnn-1.json

# Enable/disable MusiCNN analysis
EXTRACT_MUSICNN=true

# =============================================================================
# NOTES FOR DOCKER USERS
# =============================================================================
# These paths are automatically configured in Docker and don't need to be changed:
# - MUSIC_PATH=/music (mapped in docker-compose)
# - LOG_FILE=/app/logs/playlista.log (Docker environment)
# - CACHE_DIR=/app/cache (Docker environment)  
# - PostgreSQL connection (Docker environment variables override)